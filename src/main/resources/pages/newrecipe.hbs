<!DOCTYPE html>
<html lang="de" class="dark">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>MJ-SHOP</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css">
  <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
  <style>
    body {
      font-family: 'Poppins', sans-serif;
    }
    h2 {
      font-family: 'Montserrat', sans-serif;
    }
    .btn-primary {
      background-color: #4F46E5;
      color: white;
      padding: 10px 20px;
      border-radius: 8px;
    }
    .btn-primary:hover {
      background-color: #4338CA;
    }
    .dark {
      background-color: #1a202c;
      color: white;
    }
    .dark .bg-white {
      background-color: #2d3748;
    }
    .dark .text-gray-600 {
      color: #cbd5e0;
    }
  </style>
  <script>
    let rezepte = [
      { title: "Spaghetti Bolognese", description: "Leckeres Nudelgericht mit Fleischsoße", category: "Pasta", image: "spaghetti.jpg" },
      { title: "Caesar Salad", description: "Frischer Salat mit Hähnchen und Parmesan", category: "Salat", image: "caesar.jpg" },
      { title: "Schokoladenkuchen", description: "Saftiger Kuchen mit viel Schokolade", category: "Dessert", image: "chocolate_cake.jpg" }
    ];
    let editIndex = -1;

    function toggleEditRezepte(index = -1) {
      editIndex = index;
      document.getElementById("rezepteVue").classList.toggle("hidden");
      document.getElementById("rezepteModif").classList.toggle("hidden");

      if (index >= 0) {
        document.querySelector("input[name='title']").value = rezepte[index].title;
        document.querySelector("textarea").value = rezepte[index].description;
        document.querySelectorAll("input[name='category']").forEach(input => {
          input.checked = input.value === rezepte[index].category;
        })
      } else {
        document.querySelector("input[name='title']").value = "";
        document.querySelector("textarea").value = "";
        document.querySelectorAll("input[name='category']").forEach(input => input.checked = false);
        document.querySelector("input[name='image']").value = "";
      }
    }
    function addZutat() {
      const container = document.getElementById("zutatenContainer");
      const newZutat = document.createElement("div");
      newZutat.classList.add("zutaten-item", "flex", "space-x-2", "mb-3"); <!-- le div crée herite de ses classes -->
      newZutat.innerHTML = `
            <input type="number"  class="w-1/4 border p-2 rounded" name="Zutatsmenge[]" required>
            <input type="text" placeholder="Messeinheit" class="w-1/4 border p-2 rounded" name="Messeinheit[]" required>
            <input type="text" placeholder="Zutatname" class="w-1/2 border p-2 rounded" name="Zutatname[]" required>
        `;
      container.appendChild(newZutat);
    }


    function addRezept() {
      const title = document.querySelector("input[name='title']").value;
      const description = document.querySelector("textarea").value;
      const category = document.querySelector("input[name='category']").value;
      const image = document.querySelector("input[name='image']").value;
      const rezept = { title, description, category, image };

      if (editIndex >= 0) {
        rezepte[editIndex] = rezept;
      } else {
        rezepte.push(rezept);
      }

      rezepteAnzeige();
      toggleEditRezepte();
    }

    function deleteRezept(index) {
      rezepte.splice(index, 1);
      rezepteAnzeige();
    }

    function rezepteAnzeige() {
      const grid = document.getElementById("rezepteGrid");
      grid.innerHTML = "";
      rezepte.forEach((rezept, index) => {
        grid.innerHTML += `
          <div class="p-4 bg-white rounded shadow">
             <img src='/${rezept.img}' alt='${rezept.titel}' class='w-full h-40 object-cover rounded-lg mb-3'>
             <h2 class='text-lg font-bold'>${rezept.titel}</h2>
             <p></p>
            <button class="bg-blue-500 text-white px-3 py-2 rounded mt-2" onclick="toggleEditRezepte(${index})">Bearbeiten</button>
            <button class="bg-red-500 text-white px-3 py-2 rounded mt-2" onclick="deleteRezept(${index})">Löschen</button>
          </div>
        `;
      });
    }
    document.addEventListener("DOMContentLoaded", rezepteAnzeige);
  </script>
</head>
<body class="bg-gray-100">
<nav class="bg-blue-600 p-4 shadow-md fixed top-0 left-0 w-full z-50">
  <div class="container mx-auto flex justify-between items-center">
    <div class="grid grid-cols-3 md:grid-cols-6 gap-2">
      <a class="bg-white text-blue-600 px-4 py-2 rounded-lg shadow text-center" href="start2.html"><i class="fas fa-home"></i> Startseite</a>
      <a href="#" class="bg-white text-blue-600 px-4 py-2 rounded-lg shadow text-center"><i class="fas fa-list"></i> Meine Rezepte</a>
      <a href="Konto.html" class="bg-white text-blue-600 px-4 py-2 rounded-lg shadow text-center"><i class="fas fa-user"></i> Konto</a>
      <a href="Favoris.html" class="bg-white text-blue-600 px-4 py-2 rounded-lg shadow text-center"><i class="fas fa-heart"></i> Favoris</a>
      <a href="Einkaufsliste.html" class="bg-white text-blue-600 px-4 py-2 rounded-lg shadow text-center"><i class="fas fa-shopping-cart"></i> Einkaufsliste</a>
    </div>
  </div>
</nav>

<div class="container mx-auto py-10 px-5">
  <div class="bg-white p-6 rounded-xl shadow-md">

    <div id="rezepteModif" class="hidden">
      <form  >
        <div class="mb-3">
          <label for="Rezeptbild" class="form-label"><b>Rezeptbild hochladen</b></label><br>
          <input type="file" class="form-control" id="Rezeptbild" name="Rezeptbild" accept="image/*" required>
        </div>
        <div>
          <label><b> Rezeptstitel: </b></label><br>
          <input class="w-full border p-2 rounded mb-3" type="text" name="title" required>
        </div>
        <div>
          <label >Kategorie:</label>
          <select name="category" class="w-full p-2 mb-2 border rounded">
            <option value="Hauptgerichte">Hauptgerichte</option>
            <option value="Getränke">Getränke</option>
            <option value="Asiatisch">Asiatisch</option>
            <option value="Mexikanisch">Mexikanisch</option>
            <option value="Desserts">Desserts</option>
            <option value="Pizzas">Pizzas</option>
            <option value="Pancakes">Pancakes</option>
            <option value="Low Carb">Low Carb</option>
            <option value="Vegan">Vegan</option>
            <option value="Vegetarisch">Vegetarisch</option>
            <option value="Snacks">Snacks</option>
            <option value="Vorspeisen">Vorspeisen</option>
          </select>
        </div>


        <h3 class="text-lg font-semibold mb-3">Zutaten</h3>
        <div id="zutatenContainer">
          <div class="zutaten-item flex space-x-2 mb-3">
            <input type="number"  class="w-1/4 border p-2 rounded" name="Zutatsmenge[]" required>
            <input type="text" placeholder="Messeinheit" class="w-1/4 border p-2 rounded" name="Messeinheit[]" required>
            <input type="text" placeholder="Zutatname" class="w-1/2 border p-2 rounded" name="Zutatname[]" required>
          </div>
        </div>
        <button type="button" onclick="addZutat()" class="bg-green-500 text-white px-3 py-2 rounded mb-3">+ </button>
        <div>
          <label><b> Rezeptsbeschreibung: </b></label><br>
          <textarea class="w-full border p-2 rounded mb-3" required> </textarea>
        </div>
        <button class="btn-primary bg-green-500 w-full" onclick="addRezept()">Speichern</button>
        <button type="button" onclick="toggleEditRezepte()" class="bg-red-600 text-white px-4 py-2 rounded w-full mt-2">Abbrechen</button>
      </form>

    </div>
  </div>
</div>









<footer class="bg-gray-800 text-white text-center p-6 mt-10">
  <div class="container mx-auto flex flex-col md:flex-row justify-between items-center">
    <p class="mb-3 md:mb-0">© 2025 Mansvell Nkwanga & Joel ngounouo Informatik Projekt WS24/25</p>
    <a href="start.html"> <button class="bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded">Abmelden</button></a>
  </div>
</footer>
<script>
  function toggleDarkMode() {
    document.documentElement.classList.toggle('dark');

    // Sauvegarde la préférence dans localStorage
    if (document.documentElement.classList.contains('dark')) {
      localStorage.setItem('theme', 'dark');
    } else {
      localStorage.setItem('theme', 'light');
    }
  }

  // Appliquer le mode sombre si l'utilisateur l'a déjà activé
  if (localStorage.getItem('theme') === 'dark') {
    document.documentElement.classList.add('dark');
  }

  async function toggleEditRezepte(index=0,Rid=0) {
    document.getElementById("daschboard").classList.toggle("hidden");
    document.getElementById("daschboard2").classList.toggle("hidden");
    if(index !== 0){

      try{
        const response = await fetch('/users/{{this.connectedUser}}/rezepte/'+ Rid + '/request');

        if (!response.ok) {
          throw new Error('Erreur réseau: ' + response.statusText);
        }

        const recipeToUpdate = await response.json();
        //const cat = await recipeToUpdate.category.json();
        console.log(recipeToUpdate);
        document.querySelector("input[name='title']").value = recipeToUpdate.title;
        document.querySelector("textarea").value = recipeToUpdate.beschreibung;

        const categorySelect = document.getElementById("category");
        categorySelect.value = recipeToUpdate.category;

        const zutatenContainer = document.getElementById("zutatenContainer");
        zutatenContainer.innerHTML = ""; // Supprime tous les anciens ingrédients avant d'en ajouter de nouveaux

        recipeToUpdate.zutaten.forEach(zutat => {
          const newZutat = document.createElement("div");
          newZutat.classList.add("zutaten-item", "flex", "space-x-2", "mb-3");
          newZutat.innerHTML = `
          <input type="number" class="w-1/4 border p-2 rounded" name="zMenge" value="${zutat.Menge}" required>
          <input type="text" class="w-1/4 border p-2 rounded" name="zMesseinheit" value="${zutat.Messeinheit}" required>
          <input type="text" class="w-1/2 border p-2 rounded" name="zName" value="${zutat.Zname}" required>
        `;
          zutatenContainer.appendChild(newZutat);
        });



      }catch (error) {
        console.error('Erreur try. Erreur lors de la récupération des données :', error);
      }

    }else{
      document.querySelector("input[name='title']").value = "";
      document.querySelector("textarea").value = "";
      document.querySelectorAll("input[name='category']").forEach(input => input.checked = false);
      document.querySelector("input[name='image']").value = "";
    }
  }


</script>
</body>
</html>




document.getElementById("commentForm").addEventListener("submit", (event) => {
const noteInput = document.getElementById("note");
noteInput.value = userRating; // Assurez-vous que userRating est bien défini !
});


// Envoi du commentaire et de la note via une requête POST
kommentarButton.addEventListener("click", () => {
const commentText = kommentarInput.value.trim();
if (commentText === "") {
alert("Bitte geben Sie einen Kommentar ein."); // Vérifier si l'utilisateur a saisi un commentaire
return;
}

const Rid = {{this.rezept.Rid}}; // Extraction de l'ID de la recette depuis l'URL
const Nid = {{this.connectedUser}}; // Remplace ceci par la vraie valeur de l'utilisateur connecté





fetch(`/rezepte/${Rid}/comments/${Nid}`, {
method: "POST",
//headers: { "Content-Type": "application/json" },
//body: JSON.stringify(data)
headers: { "Content-Type": "application/x-www-form-urlencoded" },
body: new URLSearchParams({
kommentarInput: commentText,
rating: userRating > 0 ? userRating : null

})
})
.then(response => {
if (response.ok) {
//alert("Kommentar erfolgreich hinzugefügt!");
window.location.reload(); // Recharger la page pour afficher le nouveau commentaire
} else {
throw new Error("Fehler beim Hinzufügen des Kommentars");
}
})
.catch(error => console.error("Error:", error));
});








document.getElementById("note").classList.remove("hidden");
const note = document.getElementById("note");
note.value = userRating;
//document.getElementById("note").classList.add("hidden");



action="/rezepte/{{this.rezept.Rid}}/comments/{{this.connectedUser}}" method="POST"
